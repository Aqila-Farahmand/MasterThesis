workflow_name,run_id,run_status,run_conclusion,commit_id,commit_message,commit_author,commit_date,commit_size,files_changed,pull_request_id,pull_request_title,pull_request_author,pull_request_created_at,Pull_request_label,pull_request_body,pull_request_conversation
.github/workflows/ansible.molecule.fo.yml,7631544572,completed,failure,53c40419a3a9d6e84983f76ac9d3687efeb180a7,Fix RPM build failure in CI,ocket8888,2024-01-23T20:34:53Z,6,"['.github/actions/build-rpms/build-rpms.sh', '.github/workflows/tpv2.yml']",7925,Switch TPv2 E2E tests to Cypress,ocket8888,2024-01-23T20:31:32Z,"['low impact', 'regression bug', 'tech debt', 'experimental', 'Traffic Portal v2']","This PR switches the TPv2 E2E testing suite from NightwatchJS to Cypress.

""Why?"", you may ask. Because it took me all of two days to replicate all of our test suite in Cypress - that's how easy it is to use. For comparison: _I have never even once been able to get the Nightwatch tests to run on my machine_. With Cypress, the typings are provided by the library itself, testing on Chrome and Firefox took exactly zero time and effort to figure out, and the tests actually just do the things I want them to do without me having to spend countless hours needling them with the correct set of `await`s and chained commands. Which is why most all of our tests do little more than check for the presence of some DOM elements. Maybe with Cypress, we could fix that.

tl;dr: Nightwatch is extremely hard to use and Cypress is extremely easy.

## Changes from #7894 
- Removes building experimental RPMs from `pkg`'s default set (regression bug)
- Removes building experimental services from the CDN-in-a-Box workflow (regression bug)
- Moves experimental services from the default CDN-in-a-Box compose file into appropriate optional services (regression bug)
- Removes building experimental RPMs from the CDN-in-a-Box Makefile's default target set (regression bug)
- Adds building the TPv2 RPM as a TPv2 GHA suite test
- The TPv2 RPM now builds even after Cypress is required

<hr/>

## Which Traffic Control components are affected by this PR?
- Traffic Portal (experimental v2)

## What is the best way to verify this PR?
Run the end-to-end tests. Which doesn't take very long and can be depended upon to actually work.

## PR submission checklist
- [x] This PR has tests
- [x] This PR has documentation
- [x] This PR doesn't need a CHANGELOG.md entry
- [x] This PR **DOES NOT FIX A SERIOUS SECURITY VULNERABILITY**",[]
